{"version":3,"sources":["components/Form.js","components/Todo.js","App.js","index.js"],"names":["AddField","props","useState","name","setName","onSubmit","e","preventDefault","addTask","Row","Col","lg","Form","Control","type","id","autoComplete","value","onChange","target","Button","variant","className","Todo","isEditing","setEditing","newName","setNewName","editView","editTask","onClick","dataView","Card","Body","defaultChecked","completed","toggleTaskCompleted","htmlFor","deleteTask","App","Math","floor","random","tasks","setTasks","updatedTasks","map","task","remainingTasks","filter","editedTaskList","Container","newTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e4a6d87.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\n\r\n\r\nexport default function AddField(props) {\r\n    const [name, setName] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.addTask(name);\r\n        setName(\"\");\r\n    }\r\n\r\n    function handleUpdate(e) {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Row>\r\n                <Col lg={8}>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        id=\"new-todo-input\"\r\n                        name=\"text\"\r\n                        autoComplete=\"off\"\r\n                        value={name}\r\n                        onChange={handleUpdate}\r\n                    />\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <Button variant={\"primary\"} className={\"w-100\"} type=\"submit\">\r\n                        Add\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </form>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, Card, Col, Row, Form } from \"react-bootstrap\";\r\n\r\nexport default function Todo(props) {\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState(\"\");\r\n\r\n    function handleUpdate(e) {\r\n        setNewName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.editTask(props.id, newName);\r\n        setNewName(\"\");\r\n        setEditing(false);\r\n    }\r\n\r\n    const editView = (\r\n        <form\r\n            onSubmit={handleSubmit}>\r\n            <Row>\r\n                <Form.Control\r\n                    id={props.id}\r\n                    className=\"todo-text\"\r\n                    type=\"text\"\r\n                    value={newName}\r\n                    onChange={handleUpdate}\r\n                />\r\n            </Row>\r\n            <Row>\r\n                <Button variant={\"danger\"} type=\"button\"\r\n                        onClick={() => setEditing(false)}>\r\n                    Cancel\r\n                    <span className=\"visually-hidden\">renaming {props.name}</span>\r\n                </Button>\r\n                <Button variant={\"primary\"} type=\"submit\">\r\n                    Save\r\n                    <span className=\"visually-hidden\">new name for {props.name}</span>\r\n                </Button>\r\n            </Row>\r\n        </form>\r\n    );\r\n    const dataView = (\r\n        <Card.Body className={\"text-start\"}>\r\n            <Row>\r\n                <Col lg={8}>\r\n                    <input\r\n                        className={\"form-check-input\"}\r\n                        id={props.id}\r\n                        type=\"checkbox\"\r\n                        defaultChecked={props.completed}\r\n                        onChange={() => props.toggleTaskCompleted(props.id)}\r\n                    />\r\n                    <label className=\"form-check-label ms-5 h4\" htmlFor={props.id}>\r\n                        {props.name}\r\n                    </label>\r\n                </Col>\r\n                <Col lg={2}>\r\n                    <Button className={\"w-100\"}\r\n                            variant={\"primary\"}\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                setEditing(true);\r\n                                setNewName(props.name)\r\n                            }}>\r\n                        Edit <span className=\"visually-hidden\">{props.name}</span>\r\n                    </Button>\r\n                </Col>\r\n                <Col lg={2}>\r\n                    <Button className={\"w-100\"}\r\n                            variant={\"danger\"}\r\n                            type=\"button\"\r\n                            onClick={() => props.deleteTask(props.id)}>\r\n                        Delete <span className=\"visually-hidden\">{props.name}</span>\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card.Body>\r\n    );\r\n\r\n    return (\r\n        <Card className={\"p-5\"}>\r\n            {isEditing ? editView : dataView}\r\n        </Card>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport AddField from \"./components/Form\";\r\nimport Todo from \"./components/Todo\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            id: \"todo-\" + Math.floor(Math.random() * 1000), // Get a random ID\r\n            name: \"eat\",\r\n            completed: false\r\n        }\r\n    ]);\r\n\r\n    function toggleTaskCompleted(id) {\r\n        const updatedTasks = tasks.map(task => {\r\n            if (id === task.id) {\r\n                return { ...task, completed: !task.completed };\r\n            }\r\n            return task;\r\n        })\r\n        setTasks(updatedTasks);\r\n    }\r\n\r\n    function deleteTask(id) {\r\n        const remainingTasks = tasks.filter(task => id !== task.id);\r\n        setTasks(remainingTasks);\r\n    }\r\n\r\n    function editTask(id, newName) {\r\n        const editedTaskList = tasks.map(task => {\r\n            if (id === task.id) {\r\n                return { ...task, name: newName };\r\n            }\r\n            return task;\r\n        })\r\n        setTasks(editedTaskList);\r\n    }\r\n\r\n    function addTask(name) {\r\n        const newTask = {\r\n            id: \"todo-\" + Math.floor(Math.random() * 1000), // Get a random ID\r\n            name: name,\r\n            completed: false\r\n        };\r\n        setTasks([...tasks, newTask]);\r\n    }\r\n\r\n    return (\r\n        <Container className={\"text-center\"}>\r\n            <h1 className={\"h1\"}>My ToDo list</h1>\r\n            <AddField addTask={addTask}/>\r\n            <div className={\"my-3\"}></div>\r\n            {\r\n                tasks\r\n                    .map(task => (\r\n                        <Todo\r\n                            id={task.id}\r\n                            name={task.name}\r\n                            completed={task.completed}\r\n                            key={task.id}\r\n                            toggleTaskCompleted={toggleTaskCompleted}\r\n                            deleteTask={deleteTask}\r\n                            editTask={editTask}\r\n                        />\r\n                    ))\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}